version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: nginx-lb
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /home/ubuntu/MyLio/nginx/conf.d:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: ${MYSQL_CONTAINER_NAME}
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      LANG: C.UTF-8
    ports:
      - "${MYSQL_PORT}:${MYSQL_CONTAINER_PORT}"
    volumes:
      - /home/ubuntu/MyLio/mylio_data:/var/lib/mysql
    networks:
      - app-network
  
  redis:
    image: redis:7-alpine
    container_name: ${REDIS_CONTAINER_NAME}
    restart: always
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - /home/ubuntu/MyLio/redis_data:/data
    command: redis-server --appendonly yes 
    networks:
      - app-network

  spring-app:
    build:
      context: ./BE
      dockerfile: Dockerfile
    image: ${SPRING_IMAGE_NAME}
    container_name: ${SPRING_CONTAINER_NAME}
    restart: always
    ports:
      - "${SPRING_PORT}:${SPRING_CONTAINER_PORT}"
    environment:
      #my sql
      MYSQL_CONTAINER_NAME: ${MYSQL_CONTAINER_NAME}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_URL: ${MYSQL_URL}

      #redis 설정
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}

      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      OPEN_AI_KEY: ${OPEN_AI_KEY}

      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}

    networks:
      - app-network

  fastapi-voice:
    build:
      context: ./AI/Clova
      dockerfile: Dockerfile
    image: ${VOICE_IMAGE_NAME}
    container_name: ${VOICE_CONTAINER_NAME}
    environment:
      CLOVA_API_INVOKE_URL: ${CLOVA_API_INVOKE_URL}
      CLOVA_API_KEY_ID: ${CLOVA_API_KEY_ID}
      CLOVA_API_SECRET: ${CLOVA_API_SECRET}
      GOOGLE_TTS_API_URL: ${GOOGLE_TTS_API_URL}
      GOOGLE_TTS_API_SECRET: ${GOOGLE_TTS_API_SECRET}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      GOOGLE_APPLICATION_CREDENTIALS: /run/secret/gcp-tts-key.json
    volumes:
      - ${GCP_KEY_PATH}:/run/secret:ro
    ports:
      - "${VOICE_PORT}:${VOICE_CONTAINER_PORT}"
    restart: always
    networks:
      - app-network
  
  chroma:
    image: chromadb/chroma:0.4.24
    container_name: ${CHROMA_CONTAINER_NAME}
    ports: 
      - "${CHROMA_PORT}:${CHROMA_CONTAINER_PORT}"
    volumes:
      - /home/ubuntu/MyLio/chroma-data:/chroma/.chroma
    networks:
      - app-network

  fastapi-rag:
    build:
      context: ./AI/ai-service
      dockerfile: Dockerfile
    image: ${RAG_IMAGE_NAME}
    container_name: ${RAG_CONTAINER_NAME}
    ports:
      - "${RAG_PORT}:${RAG_CONTAINER_PORT}"
    environment:
      MYSQL_HOST: ${MYSQL_CONTAINER_NAME}
      MYSQL_PORT: ${MYSQL_CONTAINER_PORT}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASS: ${MYSQL_PASSWORD}
      MYSQL_DB: ${MYSQL_DATABASE}
      OPENAI_API_KEY: ${OPEN_AI_KEY}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      CHROMA_HOST: ${CHROMA_HOST}
      COLLECTION_NAME: ${COLLECTION_NAME}
    depends_on:
      chroma:
        condition: service_started 
      redis:
        condition: service_started
    restart: always
    networks:
      - app-network

  react-admin:
    build:
      context: ./FE/admin
      dockerfile: Dockerfile
      args:
        VITE_PUBLIC_API_URL: ${VITE_PUBLIC_API_URL}
        VITE_OPENAI_API_KEY: ${VITE_OPENAI_API_KEY}
    image: ${ADMIN_IMAGE_NAME}
    container_name: ${ADMIN_CONTAINER_NAME}
    ports:
      - "${ADMIN_PORT}:${ADMIN_CONTAINER_PORT}"
    volumes:
      - /home/ubuntu/MyLio/frontend/admin/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network

  react-kiosk:
    build:
      context: ./FE/kiosk
      dockerfile: Dockerfile
      args:
        BASE_PATH: ${KIOSK_BASE_PATH}
        VITE_PUBLIC_API_URL: ${VITE_PUBLIC_API_URL}
        VITE_PUBLIC_VOICE_API_URL: ${VITE_PUBLIC_VOICE_API_URL}
        VITE_OPENAI_API_KEY: ${VITE_OPENAI_API_KEY}
    image: ${KIOSK_IMAGE_NAME}
    container_name: ${KIOSK_CONTAINER_NAME}
    ports:
      - "${KIOSK_PORT}:${KIOSK_CONTAINER_PORT}"
    volumes:
      - /home/ubuntu/MyLio/frontend/kiosk/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
